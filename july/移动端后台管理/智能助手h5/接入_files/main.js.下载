var clearConverTimer =0 ;
var clearIndexTimer;
// ----------------------------- 判断浏览器 -------------------------
var BrowserVersion = (function() {
    var Sys = {};
    var ua = navigator.userAgent.toLowerCase();
    var s;
    (s = ua.match(/rv:([\d.]+)\) like gecko/)) ? Sys.ie = s[1] :
    (s = ua.match(/msie ([\d.]+)/)) ? Sys.ie = s[1] :
    (s = ua.match(/firefox\/([\d.]+)/)) ? Sys.firefox = s[1] :
    (s = ua.match(/chrome\/([\d.]+)/)) ? Sys.chrome = s[1] :
    (s = ua.match(/opera.([\d.]+)/)) ? Sys.opera = s[1] :
    (s = ua.match(/version\/([\d.]+).*safari/)) ? Sys.safari = s[1] : 0;
    return Sys;
})();
//解决收起或 打开左侧导航树时拖动控件拖放距离的问题
function frameOffset(){
    var iframe = $("#microSiteDesignIframe");
    if(iframe.length>0){
        setTimeout(function(){$.ui.ddmanager.frameOffsets[iframe.contents()[0]] = iframe.offset();},1000);
        //console.log(iframe.offset());
    }
}
/*function hideMenu(){
    $.root_.hasClass('menu-on-top') ? $.root_.hasClass('menu-on-top') && $.root_.hasClass('mobile-view-activated') && ($('html').addClass('hidden-menu-mobile-lock'), $.root_.addClass('hidden-menu'), $.root_.removeClass('minified')) : ($('html').addClass('hidden-menu-mobile-lock'), $.root_.addClass('hidden-menu'), $.root_.removeClass('minified'));
    frameOffset();

}*/
function hideMenu(flag){
    if(flag){
        $.root_.hasClass('menu-on-top') ? $.root_.hasClass('menu-on-top') && $.root_.hasClass('mobile-view-activated') && ($('html').addClass('hidden-menu-mobile-lock'), $.root_.addClass('hidden-menu'), $.root_.removeClass('minified')) : ($('html').addClass('hidden-menu-mobile-lock'), $.root_.addClass('hidden-menu'), $.root_.removeClass('minified'));
    }else{
        $.root_.hasClass("menu-on-top") || ($.root_.addClass("minified"), $.root_.removeClass("hidden-menu"), $("html").removeClass("hidden-menu-mobile-lock"), $this.effect("highlight", {},
            500));
    }
    frameOffset();
}

function loadSeting(url){
    loadURL(url, $('#wid-id-design-property'));
}
function eleSetUp(id){
    $.fn.jarvisWidgets && $.enableJarvisWidgets && $('string'==typeof id?'#'+id:id) .jarvisWidgets({
        grid: 'article',
        widgets: '.jarviswidget',
        localStorage: !0,
        deleteSettingsKey: '#deletesettingskey-options',
        settingsKeyLabel: 'Reset settings?',
        deletePositionKey: '#deletepositionkey-options',
        positionKeyLabel: 'Reset position?',
        sortable: !0,
        buttonsHidden: !1,
        toggleButton: !0,
        toggleClass: 'fa fa-minus | fa fa-plus',
        toggleSpeed: 200,
        onToggle: function () {
        },
        deleteButton: !0,
        deleteClass: 'fa fa-times',
        deleteSpeed: 200,
        onDelete: function () {
        },
        editButton: !0,
        editPlaceholder: '.jarviswidget-editbox',
        editClass: 'fa fa-cog | fa fa-save',
        editSpeed: 200,
        onEdit: function () {
        },
        colorButton: !0,
        fullscreenButton: !0,
        fullscreenClass: 'fa fa-expand | fa fa-compress',
        fullscreenDiff: 3,
        onFullscreen: function () {
        },
        customButton: !1,
        customClass: 'folder-10 | next-10',
        customStart: function () {
            alert('Hello you, this is a custom button...')
        },
        customEnd: function () {
            alert('bye, till next time...')
        },
        buttonOrder: '%refresh% %custom% %edit% %toggle% %fullscreen% %delete%',
        opacity: 1,
        dragHandle: '> header',
        placeholderClass: 'jarviswidget-placeholder',
        indicator: !0,
        indicatorTime: 600,
        ajax: !0,
        timestampPlaceholder: '.jarviswidget-timestamp',
        timestampFormat: 'Last update: %m%/%d%/%y% %h%:%i%:%s%',
        refreshButton: !0,
        refreshButtonClass: 'fa fa-refresh',
        labelError: 'Sorry but there was a error:',
        labelUpdated: 'Last Update:',
        labelRefresh: 'Refresh',
        labelDelete: 'Delete widget:',
        afterLoad: function () {
        },
        rtl: !1,
        onChange: function () {
        },
        onSave: function () {
        },
        ajaxnav: $.navAsAjax
    })
}

$(function(){
//  系统退出
    $("#logout").bind('click',function(){
        var logoutFun = function(){
            window.onbeforeunload=null;
            ZENG.msgbox.show("已退出登录，正在跳转中，请稍候...", 6, 2590);
            var hashParam = $("#forwarded").val();
             window.location.href=ctx+"/admin/logout.htm?hashParam="+hashParam ;
//          $.ajax({
//              url:'logout.htm',
//              type:'post',
//              success: function(data) {
//                  ZENG.msgbox.show("已退出登录，正在跳转中，请稍候...", 6, 2590);
//                  setTimeout(function(){
//                         window.location.href=ctx+"/admin/toLogin.htm" ;
//                  },3000);
//              }
//          })
        }
        $.confirm("尊敬的：<font color='green'>"+user+"</font>  确定退出系统吗？",logoutFun );
    });
    //修改登录用户信息
    $("#change_self_information").bind('click',function(){
        IKFTool.creatModal({
            url:'security/userInfo/toUpdateLoginUser.htm'
        })
        //$("#modal-remote").modal({remote:""});
    })
    $("#change_password").click(function(){
        IKFTool.creatModal({
            url:'security/userInfo/toChangePassWord.htm'
        })
        //$("#modal-remote").modal({remote:"security/userInfo/toChangePassWord.htm"});
    });
    //解决最大化回复时提示没有消失的问题
    $(document).on("click", ".jarviswidget-fullscreen-btn", function(){
        if( $("#jarviswidget-fullscreen-mode").length==0){
            $(this).tooltip('hide');
        }

    });
    $(".man-servicePlat-access").bind('click',function(){
/*        if(BrowserVersion.ie=='7.0'){
            $(this).attr('href','javascript:void(0);');
            $(this).removeAttr('target');
            ZENG.msgbox.show("尊敬的客户，很抱歉，请升级您的IE浏览器", 5, IKFTool.errTime);
            return false;
        };*/
        _this =  this;
        var type = 3;
        var mjid = $("#mjid").val();
        $.ajax({
            async : false,//要用同步
            cache : false,
            type : "post",
            data : {
                "mjid" : mjid
            },
            url : "manualcontrol/mainCheckExist.htm",
            success : function(result) {
            	if(result.indexOf("/logout.htm") >= 0){
            		ZENG.msgbox.show('登录超时，请重新登录', 5, 2000);
            		setTimeout(function(){
            			window.location.href=IKFTool.ctx+'/admin/logout.htm';},2000);
            	}else{
            		if (result == "1") {
            			var status = "1";
            			if(seatType=="1"){
            				status = "31";
            			}
            			openWindowManual = window.open(IKFTool.ctx+'/admin/getManualService.htm?moduleCode=MANUALCONVER&status='+status);
            		}else{
            			$(_this).attr('href','javascript:void(0);')
            			$(_this).removeAttr('target');
            			IKFTool.creatModal({
            				url:'manualcontrol/toCheckModel.htm?mjid='+mjid+"&type="+result+"&status=1"
            			});
            		}
            	}
            }
        });
    })
    
    $(".man-servicePlat-access-guaqi").bind('click',function(){
        _this =  this;
        var type = 3;
        var mjid = $("#mjid").val();
        $.ajax({
            async : false,//要用同步
            cache : false,
            type : "post",
            data : {
                "mjid" : mjid
            },
            url : "manualcontrol/mainCheckExist.htm",
            success : function(result) {
            	if(result.indexOf("/logout.htm") >= 0){
            		ZENG.msgbox.show('登录超时，请重新登录', 5, 2000);
            		setTimeout(function(){
            			window.location.href=IKFTool.ctx+'/admin/logout.htm';},2000);
            	}else{
            		if (result == "1") {
            			
            			var status = "0";
            			if(seatType=="1"){
            				status = "31";
            			}
            			openWindowManual = window.open(IKFTool.ctx+'/admin/getManualService.htm?moduleCode=MANUALCONVER&status='+status);
            		}else{
            			$(_this).attr('href','javascript:void(0);')
            			$(_this).removeAttr('target');
            			IKFTool.creatModal({
            				url:'manualcontrol/toCheckModel.htm?mjid='+mjid+"&type="+result+"&status=0"
            			});
            		}
            	}
            }
        });
    })
});

function ajaxFilter(data){
    try{
        var res = typeof(data) =='string'? $.parseJSON(data):data,
                
            errorType = res.errorType;
        if(errorType){
            ZENG.msgbox.show(res.msg, 5, IKFTool.errTime);
            res.toClose&&closeModal();
            res.toClose&&$.closeModal();
            res.toClose&&$.closeModal(IKFTool.remoteModal1El);
            if(errorType == 'logout'){
                //window.location = IKFTool.ctx+'admin/login.htm'
                setTimeout(function(){
                    window.location = IKFTool.ctx+'/admin/logout.htm';
                },2500)
            }
            return false;
        }
    }catch(e){
        
    }
    return true;
}
/**
 * 设置系统中所有ajax的信息
 * */
$.ajaxSetup({
    headers:{
        'request-by': 'ajax-request-tag' //标识ajax请求
    },
//    beforeSend:function(){
//        var success = this.success||function(){};
//        this.success = function(data, textStatus, jqXHR){
//            if(!ajaxFilter(data)){
//                return;
//            }
//            success(data, textStatus, jqXHR);
//        }
//    }
    beforeSend:function(){
        var success = this.success||function(){},
        error = this.error||function(){};
        this.success = function(data, textStatus, jqXHR){
            if(!ajaxFilter(data)){
                return;
            }
            success(data, textStatus, jqXHR);
        }
        this.error = function(jqXHR, textStatus, errorThrown){
            if(!ajaxFilter(jqXHR.responseText)){
                return;
            }
            error(jqXHR, textStatus, errorThrown);
        }
    }

});

/**
 * 汉化datatable中的数据
 */
$.fn.dataTable&&$.extend(!0, $.fn.dataTable.defaults, {
    oLanguage: {
        sLengthMenu: '<span class=\'dataTables_side_lenMenu\'>每页</pan> _MENU_ <span class=\'dataTables_side_lenMenu\'>条</span>',
        sSearch: '',
        sInfo: '共 _TOTAL_ 条',
        sInfoEmpty: '共 _TOTAL_ 条',
        sZeroRecords:'没有搜索到数据',
        sEmptyTable:'没有可显示的数据',
        oPaginate:{
            sFirst:'首页',
            sLast:'尾页',
            sPrevious:'上一页',
            sNext:'下一页'
        }
    }
})
//console.log($.fn.dataTableExt.pager.numbers_length);
$.extend($.fn.dataTableExt.pager,{'numbers_length':6});
//console.log($.fn.dataTableExt.pager.numbers_length);
/*$.extend($.fn.dataTableExt,{errMode:'throw'});
console.log($.fn.dataTableExt);*/
/**
 * jquery validate 汉化
 */
$.extend($.validator.messages, {
    required: "必选字段",
    remote: "请修正该字段",
    email: "请输入正确格式的电子邮件",
    url: "请输入合法的网址",
    date: "请输入合法的日期",
    dateISO: "请输入合法的日期 (ISO).",
    number: "请输入合法的数字",
    digits: "只能输入整数",
    creditcard: "请输入合法的信用卡号",
    equalTo: "请再次输入相同的值",
    accept: "请输入拥有合法后缀名的字符串",
    maxlength: jQuery.validator.format("请输入一个 长度最多是 {0} 的字符串"),
    minlength: jQuery.validator.format("请输入一个 长度最少是 {0} 的字符串"),
    rangelength: jQuery.validator.format("请输入 一个长度介于 {0} 和 {1} 之间的字符串"),
    range: jQuery.validator.format("请输入一个介于 {0} 和 {1} 之间的值"),
    max: jQuery.validator.format("请输入一个最大为{0} 的值"),
    min: jQuery.validator.format("请输入一个最小为{0} 的值")
});
/**
 * jquery.validate中的错误信息及高亮信息的修改
 */
$.extend($.validator.defaults,{
    errorPlacement : function(error, element) {
        var parent = element.parent();
        //error.addClass('help-block');
        if(parent.hasClass('input-group')){
            error.insertAfter(parent);
        }else{
            if(element[0].type=='file'){
                error.insertAfter(element.closest(".input-file"));
            }else{
                error.insertAfter(element);
            }

        }
//        if($(element).is(":hidden")){
//          console.log("error=====",error);
//          ZENG.msgbox.show(error[0].innerHTML+"验证错误", 5,
//                  IKFTool.errTime);
//        }
        /*var formGroup = element.parents('.form-group');
         formGroup.append()*/
    },
    highlight:function(element,invalid,valid){
        var parent = $(element).parent(),
            temp = $(element);
        if(parent.hasClass('input-group')){
            temp = parent;
        }
        if(element.type=='file'){
            temp = temp.closest(".input-file");
        }

        //var formGroup = $(element).parents('.form-group');

        //$(element).addClass(invalid).removeClass(valid);
        temp.parent().addClass('state-error').removeClass('state-success');
        //formGroup.addClass('has-error').removeClass('has-success');
    },
    unhighlight:function(element,invalid,valid){
        var parent = $(element).parent(),
            temp = $(element);
        if(parent.hasClass('input-group')){
            temp = parent;
        }
        //var formGroup = $(element).parents('.form-group');
        $(element).removeClass(invalid).addClass(valid);
        temp.parent().addClass('state-success').removeClass('state-error');
        //formGroup.addClass('has-success').removeClass('has-error');
    }
})
 /**
 * 定义系统中填出框的声音文件的路径
 */
$.sound_path = '../resources/bootstrap/sound/';
//系统提供的全局的对象
var IKFTool={
    errTime :2000,//操作失败提示显示时间(毫秒)
    sucTime :1000, //操作成功提示显示时间(毫秒)
    ctx :'',//存放系统的上下文路径，即工程名，在index.html中进行初始化  IKFTool.ctx
    remoteModalEl:$('#modal-remote'),//IKFTool.remoteModalEl
    remoteModal1El:$('#modal-remote1'),//IKFTool.remoteModal1El
	notification:"http://aikf.oss-cn-beijing.aliyuncs.com/1452156648059notification.png",
//	"../resources/resourcesOfen/images/callcenter.img_iwulaidian.png",
    /**
     * sessionId:,//sessionId
     * userEnName,
     * userChName:
     */
    user:{},//存放当前用户信息
    //创建日期控件
    createDatePicker:function (select){
        var datapicker = $(select),
            frmate = datapicker.attr("data-dateformat") || "dd.mm.yy";
        datapicker.datepicker({
            dateFormat: frmate,
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>'
        });
    },
    /**
     * IKFTool.creatModal
     * @param cfg
     *  url:url地址,
     *  content:放入弹出层中的html代码
     *  large: 是否使用大弹出层，
     *  modalEl：生成弹出层的jquery对象,默认值this.remoteModalEl
     *  onHide: 弹出层关闭时的回调函数
     *      remoteModal:弹出层的jquery对象
     *  callback ：回调函数
     *      remoteModal:弹出层的jquery对象
     */
    creatModal:function(cfg){
            $('body').css('overflow-y','hidden');
            var remoteModal = cfg.modalEl||this.remoteModalEl,
                large = cfg.large,
                callback = cfg.callback,
                onHide = cfg.onHide,
                url = cfg.url,
                content = cfg.content,
                patternOne = /\.htm$/,
                pattern = /\.htm[?].+/;
            //console.log(remoteModal.data("bs.modal"));
            large&&$('.modal-dialog',remoteModal).addClass('modal-lg');
            remoteModal.removeData("bs.modal");
            remoteModal.off('shown.bs.modal').on('shown.bs.modal', function (e) {
                $(document).off('focusin.modal');//解决编辑器弹出层文本框不能输入的问题http://stackoverflow.com/questions/14795035/twitter-bootstrap-modal-blocks-text-input-field  setting.onShown(e);
            });
            if(url){
                if(patternOne.test(url)){
                    url = url + "?_="+Math.random()
                }else if(pattern.test(url)){
                    url = url + "&_="+Math.random()
                }
                remoteModal.modal({
                    remote:url
                }).on('loaded.bs.modal',function(){
                    $("[rel=tooltip]",this).tooltip();
                });
            }else if(content){
                $('.modal-content',remoteModal).html(content);
                remoteModal.modal();
            }

            remoteModal .on('hidden.bs.modal',function(){
                 $('body').css('overflow-y','scroll');
                var mode = $(this);
                large&&$('.modal-dialog',this).removeClass('modal-lg');
               //$('.modal-content',this).empty();
               $('.modal-content',this)[0].innerHTML ="";
                try{//解决ie11中切换报错的问题
                    $("#modal-remote .uploadify").uploadify('destroy');
                }catch(e){}
                //删除事件
                mode.unbind('hidden.bs.modal');
                //console.log(this);
                mode.removeData("bs.modal");
                onHide&&onHide(mode);
            });
            callback&&callback(remoteModal);
        },
        
    /**
     * IKFTool.creatKnowledgeModal
     * @param cfg
     *  url:url地址,
     *  content:放入弹出层中的html代码
     *  large: 是否使用大弹出层，
     *  modalEl：生成弹出层的jquery对象,默认值this.remoteModalEl
     *  onHide: 弹出层关闭时的回调函数
     *      remoteModal:弹出层的jquery对象
     *  callback ：回调函数
     *      remoteModal:弹出层的jquery对象
     */
    creatKnowledgeModal:function(cfg){
            $('body').css('overflow-y','hidden');
            var remoteModal = cfg.modalEl||this.remoteModalEl,
                large = cfg.large,
                callback = cfg.callback,
                onHide = cfg.onHide,
                url = cfg.url,
                content = cfg.content,
                patternOne = /\.htm$/,
                pattern = /\.htm[?].+/;
            //console.log(remoteModal.data("bs.modal"));
            large&&$('.modal-dialog',remoteModal).addClass('modal-knowlg');
            remoteModal.removeData("bs.modal");
            remoteModal.off('shown.bs.modal').on('shown.bs.modal', function (e) {
                $(document).off('focusin.modal');//解决编辑器弹出层文本框不能输入的问题http://stackoverflow.com/questions/14795035/twitter-bootstrap-modal-blocks-text-input-field  setting.onShown(e);
            });
            if(url){
                if(patternOne.test(url)){
                    url = url + "?_="+Math.random()
                }else if(pattern.test(url)){
                    url = url + "&_="+Math.random()
                }
                remoteModal.modal({
                    remote:url
                }).on('loaded.bs.modal',function(){
                    $("[rel=tooltip]",this).tooltip();
                });
            }else if(content){
                $('.modal-content',remoteModal).html(content);
                remoteModal.modal();
            }

            remoteModal .on('hidden.bs.modal',function(){
                 $('body').css('overflow-y','scroll');
                var mode = $(this);
                large&&$('.modal-dialog',this).removeClass('modal-knowlg');
               //$('.modal-content',this).empty();
               $('.modal-content',this)[0].innerHTML ="";
                try{//解决ie11中切换报错的问题
                    $("#modal-remote .uploadify").uploadify('destroy');
                }catch(e){}
                //删除事件
                mode.unbind('hidden.bs.modal');
                //console.log(this);
                mode.removeData("bs.modal");
                onHide&&onHide(mode);
            });
            callback&&callback(remoteModal);
        },

    /*creatModal:function(cfg){

        var remoteModal = cfg.modalEl||this.remoteModalEl,
            large = cfg.large,
            callback = cfg.callback,
            onHide = cfg.onHide;
            content = cfg.content;
        //console.log(remoteModal.data("bs.modal"));
        large&&$('.modal-dialog',remoteModal).addClass('modal-lg');
        remoteModal.modal({
            remote:cfg.url
        });
        remoteModal .on('hidden.bs.modal',function(){
            var mode = $(this);
            large&&$('.modal-dialog',this).removeClass('modal-lg');
            $('.modal-content',this).empty();
            //删除事件
            mode.unbind('hidden.bs.modal');
            //console.log(this);
            mode.removeData("bs.modal");
            onHide&&onHide(mode);
        });
        callback&&callback(remoteModal);
    },*/
    
    
    /**
     * IKFTool.dataTableSelect
     * 统一的解决datatable点选和多选的问题
     * @param dataTable          datatable对象
     * @param dataTableTbody     datatable的tbody的选择器
     * @param multiple           true：多选、false：单选
     */
    dataTableSelect:function(dataTable,dataTableTbody,multiple){
        var inputType = multiple?'checkbox':'radio';
            //$(dataTableTbody).on( 'click', 'tr',multiple?checkboxFun:radioFun );
            $(dataTableTbody).on( 'click', 'tr',function (e) {
                //解决点击checkbox时触发两次事件的问题
                if(e.target.localName == 'span'){
                    return;
                }
                if(multiple){
                    try{
                        var all = $('input[value="all"]',dataTable.column(0).header());
                    }catch(e){
                        
                    }
                }

                if ( $(this).hasClass('success') ) {
                    $(this).removeClass('success');
                    var checked = $('input[type='+inputType+']',this);
                    if(checked.length>0){
                        checked[0].checked = false;//.removeAttr('checked');
                    }


                    //console.log(dataTable.column(0).header());
                    if(multiple&&all.length>0&&all[0].checked){
                        all[0].checked = false;
                    }
                }else{
                    //去除原来选中的样式
                    if(!multiple){
                        var selected = dataTable.$('tr.success');
                        if(selected.length>0){
                            //$('input[type=checkbox]',selected)[0].checked = false;
                            selected.removeClass('success');
                        }
                    }

                    $(this).addClass('success');
                    var input = $('input[type='+inputType+']',this);
                    if(input.length>0){
                        input[0].checked = true;//.attr('checked',true);
                    }


                    if(multiple && all && all.length>0&&dataTable.$('input').length==dataTable.$('input:checked').length&&dataTable.$('input').length>0){
                        all[0].checked = true;
                    }
                }
            } );
        //重新加载数据时，取消全选
        if(multiple){
            dataTable.on( 'draw.dt', function () {
                var all = $('input[value="all"]',dataTable.column(0).header());
                all[0]&&(all[0].checked=false);
            } );
        }

    },
    /**
     * IKFTool.dataTableSelectAll
     * 统一处理datatable的全选/全取消的问题
     * @param checkbox 全选的checkbox
     */
    dataTableSelectAll:function(checkbox){
        var switch_input = $(checkbox),
            table = switch_input.parents('table'),
            tbody = table.children('tbody') ;
        if (switch_input.is(':checked')) {
            //全选
            $('tr',tbody).addClass('success');
            $(tbody[0]).find('input[type=checkbox]').each(function(u){
                this.checked=true;
            });
        }else{
            //全不选
            $('tr',tbody).removeClass('success');
            $(tbody[0]).find('input[type=checkbox]').each(function(u){
                this.checked=false;
            });
        }
    },
    /**
     * IKFTool.dataTableRemoveSelectAll
     * 统一处理datatable的页面跳转上个页面的全选对这个页面的影响
     * @param tableId 表格id
     */
    dataTableRemoveSelectAll:function(tableId){
        var checkbox = $("#"+tableId).find("input[type=checkbox]");
        if(checkbox.length>0){
            checkbox[0].checked = false;
        }
    },
    /**
     *  图片上传 IKFTool.imgUpload
     * @param uploadInput 图片控件id
     * @param confg 上传的配置
     */
    imgUpload:function(uploadInput,confg){
        	var ctx = this.ctx;
            var opt = {
                method : 'post',
                swf : ctx + '/resources/js/uploadify/uploadify.swf', // uploadify.swf在项目中的路径
                //uploader : 'imageMaterial/multiImageUpload.htm;jsessionid='+ saveId, // 后台UploadController处理上传的方法
                fileObjName : 'imgFile', // The name of the file object to use in your server-side script
                fileSizeLimit : '2MB', // The maximum size of an uploadable file in KB (Accepts units B KB MB GB if string, 0 for no limit)
                successTimeout : 30, // The number of seconds to wait for Flash to detect the server's response after the file has finished uploading
                removeCompleted : true, // Remove queue items from the queue when they are done uploading
                removeTimeout:1,//上传成功后多长时间删除
                buttonClass:'change-control-btn',
                buttonText : '<span class="fa fa-upload"></span>',
                height : 20,
                width : 20,
                fileTypeExts : '*.jpg;*.png;*.jepg;*.bmp;*.gif',
                itemTemplate:'<div id="${fileID}" class="uploadify-queue-item">'
                    +'<div class="easy-pie-chart txt-color-blue easyPieChart" data-percent="0">'
                    +    '<span class="percent percent-sign font-xs">0</span>'
                    +'</div></div>',
                onSelect:function(file){
                    var container = $('#'+file.id).parents('.img_uploadify_container').parent();

                    $('#'+file.id).parent('.uploadify-queue').css({
                        left:(46-container.width())/2+'px',//(width-46)/2-(w-46)
                        top:(-6-container.height())/2+'px'//(h-46)/2-(h-20)
                    }).show();
                    $('#' + file.id + ' .easyPieChart').easyPieChart({
                        barColor: '#57889c',
                        trackColor: '#eeeeee',
                        scaleColor: !1,
                        lineCap: "butt",
                        lineWidth: 5,
                        animate: 1000,
                        rotate: -90,
                        size: 46,
                        onStep: function(from, to, percent) {
                            $(this.el).find('.percent').text(Math.round(percent))
                            //this.$el.find("span").text(~~a)
                        }
                    })
                },
                onUploadProgress:function(file, bytesUploaded, bytesTotal, totalBytesUploaded, totalBytesTotal){
                    /*console.log('onUploadProgress');
                     console.log(file);
                     console.log(arguments);
                     var pre = bytesUploaded/bytesTotal*100;
                     console.log(pre);*/
                    var pre = bytesUploaded/bytesTotal*100;
                    if(pre<=99){
                        $('#' + file.id + ' .easyPieChart').data('easyPieChart').update(pre);
                    }

                    /*var container = $('#'+file.id).parents('.img_uploadify_container').parent();

                     $('#'+file.id).parent('.uploadify-queue').css({
                     left:(36-container.width())/2+'px',//(width-36)/2-(w-36)
                     top:(4-container.height())/2+'px'//(h-36)/2-(h-20)
                     })*/
                },
                onUploadSuccess : function(file, data, response) {
                    if(data){
                        var resp = $.parseJSON(data);
                        $('#'+file.id).parent('.uploadify-queue').hide();//隐藏进度框
                        $("#"+uploadInput+'_fileName').val(resp.fileName);
                        //$('#'+uploadInput+'_image').attr('src',IKFTool.ctx+(resp.path||resp.relaPath));
                        $('#'+uploadInput+'_image').attr('src',resp.url);
                        //将图片路径传给对象属性
                        $('#'+uploadInput+'_input').val(resp.url).change();
                        $("#headImgUrl").val(resp.url);
                        //控制对应图片下的选中按钮显示
                        $("span[id^='defalut']>i").hide();
                        $("span[id='defalut4Span']>i").show();
                        
                        $('#'+uploadInput+'_imagePath').val(resp.path);
                        //$('#imageMaterialSource').css('style','margin-top:10px;display:block');
                        /*$('#imageMaterialSource').css({
                         'margin-top':'10px',
                         'max-width':'100%'
                         }).show();*/
                        $('#'+uploadInput+'_image_ids').val(resp.ids);
                        if(confg.special){
                            $('#'+uploadInput+'_fileName2').html('您可以点击发送按钮，发送该文件');
                            $('#'+uploadInput+'_url').html(resp.url);
                           //   console.log($('#'+uploadInput+'_fileName2'));
                        }
                        //console.log(resp.ids);
                    }else{
                        if(confg.special){
                            $('#'+uploadInput+'_fileName2').html('不支持此种类型的文件');
                           //   console.log($('#'+uploadInput+'_fileName2'));
                        }
                    }
                }
            };
            if(confg.special){
                opt.fileTypeExts = "";
            }
            $.extend(opt,confg)
            //this.user.sessionId = $("#image_saveId").val();
             //console.log(this.user.sessionId);
            opt.uploader = opt.uploader+';jsessionid='+this.user.sessionId;
            try {
//            	console.log(uploadInput)
            	$('#'+uploadInput).uploadify(opt);	
            } catch (e){
            	
            }
            
        
    },
    /**
     * 文件上传 IKFTool.fileUpload
     * @param uploadInput
     * @param type audio|video|file
     * @param cfg
     */
    fileUpload:function(uploadInput,type,cfg){
        var ctx = this.ctx;
        var opt = {
            method : 'post',
            swf : ctx + '/resources/js/uploadify/uploadify.swf', // uploadify.swf在项目中的路径
            fileObjName : 'file', // The name of the file object to use in your server-side script
            fileSizeLimit : '20MB', // The maximum size of an uploadable file in KB (Accepts units B KB MB GB if string, 0 for no limit)
            successTimeout : 30, // The number of seconds to wait for Flash to detect the server's response after the file has finished uploading
            removeCompleted : false, // Remove queue items from the queue when they are done uploading
            buttonClass:'change-control-btn',
            buttonText : '<span class="fa fa-upload"></span> 选择文件',
            height : 30,
            width : 80,
            //fileTypeExts : '*.mp3;*.wma;*.wav;*.amr',
            itemTemplate:'<div id="${fileID}" class="uploadify-queue-item">'
                        +'	<div class="cancel"><a href="javascript:$(\'#'+uploadInput+'\').uploadify(\'cancel\', \'${fileID}\')">X</a></div>'
            			+'	<span class="fileName">${fileName} (${fileSize})</span>'
            			+'	<span class="data"></span>'
                        +'	<div class="uploadify-progress">  '
                        +'		<div class="uploadify-progress-bar"></div>'
                        +'	</div>'
                        +'</div>',
                            						
            onSelect:function(file){
                var container = $('#'+file.id).parents('.img_uploadify_container').parent();
                $('#'+file.id).parent('.uploadify-queue').css({
                    left:(46-container.width())/2+'px',//(width-46)/2-(w-46)
                    top:(-6-container.height())/2+'px'//(h-46)/2-(h-20)
                }).show();
                $('#' + file.id + ' .easyPieChart').easyPieChart({
                    barColor: '#57889c',
                    trackColor: '#eeeeee',
                    scaleColor: !1,
                    lineCap: "butt",
                    lineWidth: 5,
                    animate: 1000,
                    rotate: -90,
                    size: 46,
                    onStep: function(from, to, percent) {
                        $(this.el).find('.percent').text(Math.round(percent))
                        //this.$el.find("span").text(~~a)
                    }
                })
            },
            onUploadSuccess : function(file, data, response) {
                var resp = $.parseJSON(data);
                /*var fileSize = resp.fileSize;
                var newFileName = resp.newFileName;
                var suffix = resp.suffix;
                var originalName = resp.originalName;
                var relaPath = resp.relaPath;*/
                /*$('#'+uploadInput+'_fileName').val(resp.originalName);
                $('#'+uploadInput+"_fileSize").val(resp.fileSize);
                $('#'+uploadInput+"_newFileName").val(resp.newFileName);
                $('#'+uploadInput+"_suffix").val(resp.suffix);
                $('#'+uploadInput+"_relaPath").val(resp.relaPath);*/
            }
        };
        /*if(type == 'audio'){
            opt.fileTypeExts = '*.mp3;*.wma;*.wav;*.amr';
            opt.buttonText = '<span class="fa fa-music "></span> 选择音频';
        }else if(type == 'video'){
            opt.fileTypeExts = '*.rm;*.rmvb;*.wmv;*.avi;*.mpg;*.mpeg;*.mp4';
            opt.buttonText = '<span class="fa fa-film"></span> 选择视频';
        }*/
        
        $.extend(opt,cfg);
        //this.user.sessionId = $("#addAudio_saveId").val();
        //console.log(this.user.sessionId);
        opt.uploader = opt.uploader+';jsessionid='+this.user.sessionId;

        $('#'+uploadInput).uploadify(opt);
    },
    /**
     * 响应类型 IKFTool.responseType
     * @param selecter 下拉框的选择器
     */
    responseType:function(selecter){
        $(selecter).change(function(e){
            //console.log(e);
            var me = this,
                relname = $(me).parent().data('relname'),
                index = $(selecter+'.select2-offscreen').index(this)+1,
                added = e.added.element[0],
                removed = e.removed.element[0],
                eventId = $(added).attr("eventId"),
                eventIdEl = $(me).parent().find('input[name="'+relname+'-event-id"]'),
                type = $(me).val(),
                url = $(added).attr("url"),
                oldVal = $(removed).attr('value'),
                oldEventId = $(removed).attr('eventid'),
                remoteModal = IKFTool.remoteModalEl;//弹出框jquery对象
            if(url !=undefined && url !='' && type !=undefined && type){
                //当为文章型的时候使用large型
                if(type == "article"||type == "material"){
                    $('.modal-dialog',remoteModal).addClass('modal-lg');
                }/*else{
                 $('.modal-dialog',remoteModal).removeClass('modal-lg');
                 }*/
                //remoteModal.removeData("bs.modal").modal({
                remoteModal.removeData("bs.modal").modal({
                    remote : url +'?index='+index+"&eventId="+eventId+"&type="+type/*+'&dc='+Math.random()*/
                }).data({
                    oldValue:oldVal,
                    selectObj:me,
                    toChangeSelect:false
                });
                eventIdEl.val(eventId);
                //$('#modal-remote').on('hidden.bs.modal',function(){ //给弹出框口关闭时，如果没有点击确定按钮，还返回为原来的额值；
                remoteModal.on('hidden.bs.modal',function(){ //给弹出框口关闭时，如果没有点击确定按钮，还返回为原来的额值；
                    //console.log('hidden');
                    //var mode = $("#modal-remote");
                    var mode = $(this),
                        sendNumEl = $(me) .parents('.form-group').next('.form-group').next('.form-group'),
                        sendNumInput = $("input",sendNumEl),
                        infoEl = sendNumEl.next('.form-group'),
                        infoElInput = $("input",infoEl);
                    /*console.log(sendNumEl);
                    console.log("infoEl");
                    console.log(infoEl);*/
                    //console.log($('input[name="type"]',mode));
                    //文章类型时，在关闭时去掉large样式
                    //if($('input[name="type"',mode).val() == 'article'){
                    if(type == "article"||type == "material"){//alert(11);
                        $('.modal-dialog',this).removeClass('modal-lg');
                    }

                    //console.log('toChangeSelect:'+mode.data('toChangeSelect'))
                    if(!mode.data('toChangeSelect')){//alert(1333);
                        $(mode.data('selectObj')).select2("val", mode.data('oldValue'));
                        eventIdEl.val(oldEventId);
                    }

                    if($(mode.data('selectObj')).select2("val")=='newest_article'){
                        sendNumEl.show();
                        infoEl.show();
                    }else{
                        sendNumEl.hide();
                        infoEl.hide();
                        sendNumInput.val('');
                        infoElInput.val('');
                    }

                    //删除事件
                    mode.unbind('hidden.bs.modal');
                    //console.log(this);
                    mode.removeData("bs.modal");
                    $('.modal-content',mode).empty();
                });
            }else{
                var formGroup = $(me) .parents('.form-group'),
                    prev = $('input[name="'+relname+'-response-code"]',formGroup);
                    //prev = $('input[name="infoTitleResponseCode"]',formGroup);
                prev.val().prev().val('').prev().val('');
                formGroup.next('.form-group').find('input').val('');
            }
            e.preventDefault() ;
        }).each(function(ind){
            //给修改按钮添加点击事件
            //console.log(this);
            var me=this,
                index = ind+ 1,
                btn = $(this).parents('.form-group').next('.form-group').find('button');
            btn.click(function(){
                //获取当前选择的数据
                var data = $(me).select2("data"),
                    ele = $(data.element[0]),
                    type = ele.attr('value'),
                    url = ele.attr('url'),
                    eventId = ele.attr('eventId'),
                    remoteModal = IKFTool.remoteModalEl;

                if(url !=undefined && url !='' && type !=undefined && type){
                    //当为文章型的时候使用large型
                    if( type == "article"||type == "material" ){
                        $('.modal-dialog',remoteModal).addClass('modal-lg');
                    }

                    remoteModal.modal({
                        remote : url +'?index='+index+"&eventId="+eventId+"&type="+type/*+'&dc='+Math.random()*/
                    }).data({
                        selectObj:me
                    });

                    remoteModal.on('hidden.bs.modal',function(){ //给弹出框口关闭时，如果没有点击确定按钮，还返回为原来的额值；
                        var mode = $(this);
                        if(type == "article"||type == "material"){//alert(11);
                            $('.modal-dialog',this).removeClass('modal-lg');
                        }
                        //删除事件
                        mode.unbind('hidden.bs.modal');
                        //console.log(this);
                        mode.removeData("bs.modal");
                        $('.modal-content',mode).empty();
                    });
                }
            })
        });
    },
    /**
     * 自定义创建模板 IKFTool.listView
     * @param cof{
     *  pageEl：存放分页的html对象或者jquery选择器
     *  viewEl：显示view的html对象或者jquery选择器
     *  url:向后台请求的url地址，
     *  ajaxParams：ajax请求提交的数据
     *  itemTemplate：返回字符串的模板方法
     *      index：当前的次序
     *      item：json对象
     *   return string
     *   empty:没有数据时显示的内容
     *  affterAppend：页面加载完后的回调
     *      viewEl 存放view的对象
     *  pageConfig:配置bootstrapPaginator的参数，尽量不要配置onPageClicked
     * }
     */
    listView:function(cof){
        /*function loadData(){

        }*/
        var opt = {
            bootstrapMajorVersion:3,
            size:'small',
            currentPage:1,
            numberOfPages:7,
            totalPages:10,
            onPageClicked:function(event, originalEvent, type,page){
                //console.log(arguments);
                if((type=='prev'||type=='next')&&$(originalEvent.target).parent('li').hasClass('disabled')){
                    return;
                }
                $.ajax({
                    url:cof.url,
                    data:$.extend({},cof.ajaxParams(),{pageNo:page}),
                    type:'post',
                    datatype:'json',
                    success:function(data){
                        var res = $.parseJSON(data),
                            $viewEl = $(cof.viewEl),
                            html =[];
                        //console.log(res);
                        //更新页码
                        $pageEl.bootstrapPaginator('setOptions',{totalPages:res.totalPages});
                        $pageEl.parent().prev().find('span').html('共'+res.iTotalDisplayRecords+'条');
                        $.each(res.result,function(index,item){
                            html.push(cof.itemTemplate(index,item));
                        })
                        $viewEl.html(html.join('')||'<li class="text-muted text-center margin-bottom-10 font-md">没有可显示的数据</li>')
                        //$viewEl.html(html.join('')||cof.empty)
                        cof.affterAppend&&cof.affterAppend($viewEl);
                    }
                });
            },
            itemTexts: function (type, page, current) {
                switch(type){
                    case "first":
                        return "首页";
                    case "prev":
                        return "上一页";
                    case "next":
                        return "下一页";
                    case "last":
                        return "尾页";
                    case "page":
                        return page;
                }
            },
            tooltipTitles:function(type, page, current){
                switch (type) {
                    case "first":
                        return "首页";
                    case "prev":
                        return "上一页";
                    case "next":
                        return "下一页";
                    case "last":
                        return "尾页";
                    case "page":
                        return (page === current) ? "当前是第 " + page+'页' : "跳转到第 " + page+'页';
                }
            },
            shouldShowPage: function (type, page, current) {
                var result = true;
                switch (type) {
                    case "first":
                        //result = (current !== 1);
                        result = false;
                        break;
                    case "prev":
                        //result = (current !== 1);
                        result = true;
                        break;
                    case "next":
                        //result = (current !== this.totalPages);
                        result = true;
                        break;
                    case "last":
                        //result = (current !== this.totalPages);
                        result = false;
                        break;
                    case "page":
                        result = true;
                        break;
                }

                return result;

            },
            itemContainerClass:function(type, page, current){
                var result = '';
                switch (type) {
                    case "first":
                    case "prev":
                        //result = (current !== 1);
                        result = current==1?'disabled':'';
                        break;
                    case "next":
                        //result = (current !== this.totalPages);
                        result = current==this.totalPages?'disabled':'';
                        break;
                    case "last":
                    case "page":
                        result = page === current ? "active" : "";
                        break;
                }
                return result;
            },
            empty:'<li class="text-muted text-center margin-bottom-10 font-md">没有可显示的数据</li>'/*,
            useBootstrapTooltip:true*/
        },
        $pageEl = $(cof.pageEl);

        $.extend(opt,cof.pageConfig);
        $pageEl.bootstrapPaginator(opt);
        $pageEl.trigger('page-clicked','','','',1);
    },
    /**
     * 获得ztree的setting IKFTool.getTreeSetting
     * cfg :和ztree的结构及参数名一致
     */
    getTreeSetting:function(cfg){
        var setting = {
            async: {
                enable: true,
                autoParam: ["id"]
            },
            view: {
                dblClickExpand: false,
                showLine: true,
                selectedMulti: false
            },
            data: {
                simpleData: {
                    enable:true,
                    idKey: "id",
                    pIdKey: "pId",
                    rootPId: "root"
                }
            }
        };
        $.extend(true,setting,cfg);
        return setting;
    },
  //    去掉标签
    delHtmlTag :function (str){  
        return str.replace(/<[^>]+>/g,"");//去掉所有的html标记  
    },
    //去掉<script>
    delScript:function(str){
    	var strs = str.replace(/&lt;/g,'<').replace(/&gt;/g,'>');
        return strs.replace(/<script>/gi,"").replace(/<\/script>/gi,"");
    },
    getIEVersion :function(){
    	if(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/7./i)=="7."){
    		return 7 ;
    	} else if(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/8./i)=="8."){
    		return 8 ;
    	} else if(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/9./i)=="9."){
    		return 9 ;
    	} else if(navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.match(/10./i)=="10."){
    		return 10 ;
    	} else if(navigator.appName == "Microsoft Internet Explorer"){
    		return 0 ;
    	} 
    },
    useHtml5: function(){
    	if(navigator.appName == "Microsoft Internet Explorer") {
    		var _version = this.getIEVersion() ;
    		if(_version >0 && _version <11){
    			return false ;
    		}else{
    			return true ;
    		}
    	}else{
    		return true ;
    	}
    }
}
//含有checkbox的grid的全选
/*function checkAll(t){
    var table = t.parents('table') ;
    var tbody = table.children('tbody') ;
    if (t.is(':checked')) {
//      全选
        $('tr',tbody).addClass('success');
        $(tbody[0]).find('input[type=checkbox]').each(function(u){
            this.checked=true;
        });
    }else{
//      全不选
        $('tr',tbody).removeClass('success');
        $(tbody[0]).find('input[type=checkbox]').each(function(u){
            this.checked=false;
        });
    }
}*/
//扩展jquery的方法
$.extend({
    setItemValueExpand :function(data,index){ //设置页面的值
        if(data.eventResult !=undefined && data.eventResult !=''){
            var eventId = data.eventId ;
            var eventType = data.eventType ;
            var len =30 ;
            var text = data.eventResult ;
            if(eventType=='article'){
                text = $.getArticleById(text);
            }else if(eventType=='microwebsite'){
                text = $.getMicroWebSite(text);
            }else if(eventType=='guaguacard'){
                text = $.getAppById(text);
            }else if(eventType=='micro_form'){
                text = $.getMicroFormById(text);
            }else if(eventType=='side_photo'){
                text = $.getSidePhotoById(text);
            }
            var selObj = $('#BaseField .select2.select2-offscreen').eq(index-1),
                valfield = selObj.parents('.form-group').next('.form-group').find('input');
            selObj.select2('val',eventType);
            valfield.val(text.length>len?text.substring(0,len)+"......":text);




            /*var selection = "<section>" ;
             selection +="<span>已添加:</span>";
             selection +="<font color=blue>"+cnType+":</font>";
             if(eventType =='material' || eventType=='newest_material' || eventType =='article'){
             selection +="  <label title='"+text+"'>";
             selection +=   (text.length>len?text.substring(0,len)+"......":text) ;
             selection +="  </label>" ;
             }else {
             selection +="  <label title='"+text+"'>";
             selection +=   (text.length>len?text.substring(0,len)+"......":text) ;
             selection +="  </label>" ;
             }
             //selection +="<span class='dustbinSpan'>" ;
             //selection +="&nbsp;&nbsp;&nbsp;&nbsp;<button onclick='deleteData($(this));' class='fa fa-lg fa-fw fa-trash-o'></button>" ;
             //selection +="</span>" ;
             selection +="  </section>" ;
             if(index==1){
             $("#pluginfieldsets").html(selection) ;
             }else if(index==2){
             $("#pluginfieldsets1").html(selection) ;
             }*/
            /* $("#pluginDivPanel").show();
             $("#pluginDivPanel2").show();*/
        }/*else{
         var sections = $("#pluginfieldsets").children() ;
         if(index==2){
         sections = $("#pluginfieldsets1").children() ;
         }
         sections.empty() ;
         }*/
    },
    convertType:function(type){ //类型转换
        if(type =='text'){
            return "文字";
        }else if(type =='link'){
            return "链接";
        }else if(type =='material'){
            return "图文";
        }else if(type =='newest_material'){
            return "最新图文";
        }else if(type =='article'){
            return "文章";
        }else if(type=='microwebsite'){
            return "微官网" ;
        }else if(type=='guaguacard'){
            return "刮刮卡" ;
        }else if(type=='micro_form'){
            return "微表单" ;
        }else if(type=='side_photo'){
            return "身边拍" ;
        }else if(type=='newest_article'){
            return "最新文章" ;
        }else if(type=='dynamic_data'){
            return "动态数据";
        }else if(type=='attendance'){
            return "考勤";
        }else if(type=='sign_up'){
            return "报名";
        }
    },
    getArticleById:function(id){
        var result = "";
        $.ajax({
            url:'articleMaterial/getArticleMaterialById.htm' ,
            data:{"id":id},
            type:'post',
            async:false,
            success:function(dd){
                dd = JSON.parse(dd);
                result = dd.title==null?"":dd.title ;
            }
        }) ;
        return result;
    },
    getMicroWebSite:function(id){
        var result = "";
        $.ajax({
            url:'pageColumn/getPageColumnById.htm' ,
            data:{"id":id},
            type:'post',
            async:false,
            success:function(dd){
                dd = JSON.parse(dd);
                result = dd.pageName==null?"" :dd.pageName ;
            }
        }) ;
        return result;
    },
    getAppById:function(id){
        var result = "";
        $.ajax({
            url:'smallApp/scratchCard/getById.htm' ,
            data:{"id":id},
            type:'post',
            async:false,
            success:function(dd){
                dd = JSON.parse(dd);
                result = dd.activityName==null?"":dd.activityName ;
            }
        }) ;
        return result;
    },
    getMicroFormById:function(id){
        var result = "";
        $.ajax({
            url:'smallApp/getMicroFormById.htm' ,
            data:{"id":id},
            type:'post',
            async:false,
            success:function(dd){
                dd = JSON.parse(dd);
                result = dd.nameCh==null?"":dd.nameCh ;
            }
        }) ;
        return result;
    },
    getSidePhotoById:function(id){
        var result = "";
        $.ajax({
            url:'smallApp/sidePhoto/getSidePhotoById.htm' ,
            data:{"id":id},
            type:'post',
            async:false,
            success:function(dd){
                dd = JSON.parse(dd);
                result = dd.name==null?"":dd.name ;
            }
        }) ;
        return result;
    }
});

String.prototype.trim=function()
{
     return this.replace(/(^\s*)|(\s*$)/g, '');
}


//创建模板列表
/*(function($){
    $.fn.templateList=function(options){
        var opts = $.extend({}, $.fn.hilight.defaults, options);
        
    }
    $.fn.templateList.defaults={
            
    }
})(jQuery)*/


/*解决带树形列表左右两边中间无边框bug*/
/*
使用方法:调用函数 addBorder('左边元素','右边元素')  
*/
function addBorder(leftBox,rightBox){
    var leftBox=$(leftBox),rightBox=$(rightBox);
    for(var i=0;i<arguments.length;i++){
        $(arguments[i]).resize(function(){
            if(leftBox.height()>rightBox.height()){
                rightBox.removeClass('left-border');
                leftBox.addClass("right-border");
            }else{
                leftBox.removeClass('right-border');
                rightBox.addClass("left-border");
            }
        })
    }
}
Date.prototype.format =function(format)
{
    var o = {
        "M+" : this.getMonth()+1, //month
        "d+" : this.getDate(), //day
        "h+" : this.getHours(), //hour
        "m+" : this.getMinutes(), //minute
        "s+" : this.getSeconds(), //second
        "q+" : Math.floor((this.getMonth()+3)/3), //quarter
        "S" : this.getMilliseconds() //millisecond
    }
    if(/(y+)/.test(format)){
        format=format.replace(RegExp.$1,(this.getFullYear()+"").substr(4- RegExp.$1.length));
    } 
    for(var k in o){
        if(new RegExp("("+ k +")").test(format))
            format = format.replace(RegExp.$1,RegExp.$1.length==1? o[k] :("00"+ o[k]).substr((""+ o[k]).length));
    } 
    return format;
}
/**
 * 收集表单数据 selOrJqueryOrNode(收集范围)，toObj：返回的数据
 */
function inputs_data(selOrJqueryOrNode,toObj){
    /**
     * selOrJqueryOrNode css选择器，jquery对象或 dom节点
     * 收集表单数据
     */
    var data=toObj||{};
    try{
        var jitems=$(selOrJqueryOrNode);
        jitems.each(function(){
            var jroot=$(this);
            jroot.find("input[type!=checkbox][type!=radio],select,textarea,:checked").each(function(){
                var jit=$(this);
                var name=jit.attr("name")||"";
                if($.trim(name)!=""){
                    var t=jit.attr("type");
                    var tagValue=jit.attr("value");
                    if(t=="radio"){
                        data[name]=tagValue;
                    }else if(t=="checkbox"){
                        data[name]=data[name]||[];
                        if(!_.contains(data[name],tagValue)){
                            data[name].push(tagValue)
                        }
                    }else{
                        data[name]=jit.val();
                    }
                }
            })
        })
    }catch(e){
        log('initFormInputValue() error:',e)
    }
    return data;
}